@page "/fetchpasswords"
@using PasswordManagerClient.Services
@inject PasswordApiClient passwordApi
@using ApiReturnTypes
@using PasswordManagerClient.Elements

<PageTitle>Get All Passwords</PageTitle>

<h1>Passwords</h1>

@if (passwords == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Website</th>
                <th>Email</th>
                <th>Password</th>
                <th>Created on </th>
                <th>Last update</th>
                <th>Expiration date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var password in passwords)
            {
                <tr @onclick="() => SelectRow(password)">
                    <td>@password.associated_website</td>
                    <td>@password.associated_email</td>
                    <td>@password.password_value</td>
                    <td>@password.time_of_creation</td>
                    <td>@password.time_of_last_update</td>
                    <td>@password.expiration_date</td>
                </tr>
            }
        </tbody>
    </table>
}

<p>Selected Row: @selectedRow?.associated_email - @selectedRow?.password_value</p>

@code {

    private Password? selectedRow;
    protected bool isDisabled = true;

    private void SelectRow(Password item)
    {
        isDisabled = false;
        selectedRow = item;
    }
}

@code {
    private List<Password>? passwords;

    protected override async Task OnInitializedAsync()
    {
        passwords = await passwordApi.GetPasswordsAsync();
    }
}

@*Add password functionalitty*@
<AddPasswordModal @ref="addPasswordModal" />

<Button class="btn btn-primary" @onclick="ShowAddModal">Add</Button>

@code {
    private AddPasswordModal addPasswordModal;

    void ShowAddModal()
    {
        addPasswordModal.Show();
    }
}
@*End /// Add password functionalitty*@


@*Update password functionalitty*@

<UpdatePasswordModal @ref="updatePasswordModal" SelectedPassword="@selectedRow" />

<Button class="btn btn-primary" @onclick="ShowUpdateModal" disabled="@isDisabled">Update</Button>

@code {
    private UpdatePasswordModal updatePasswordModal;

    void ShowUpdateModal()
    {
        updatePasswordModal.Show();
    }
}
@*End /// Update password functionalitty*@

 <button class="btn btn-primary" @onclick="DeletePassword">Delete</button>
 @code {

     private void DeletePassword()
     {
     }
 }

