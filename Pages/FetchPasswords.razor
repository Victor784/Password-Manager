@page "/"
@page "/fetchpasswords"
@using PasswordManagerClient.Services
@inject PasswordApiClient passwordApi
@using ApiReturnTypes
@using PasswordManagerClient.Elements
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorBootstrap

@code {

    private Password? selectedRow;

    private void SelectRow(Password item)
    {
        selectedRow = item;
        
    }
}

@code {
    private List<Password>? passwords;
   

    protected override async Task OnInitializedAsync()
    {
        passwords = await passwordApi.GetPasswordsAsync();

    }
    }
@*Add password functionalitty*@
<AddPasswordModal @ref="addPasswordModal" Refresh=@Refresh/>

<Button class="btn special_btn" @onclick="ShowAddModal"><Icon Name="IconName.PlusLg" Color="IconColor.Success" Size="IconSize.x5" /></Button>

@code {
    private AddPasswordModal addPasswordModal;

    void ShowAddModal()
    {
        addPasswordModal.Show();
    }
}
@*End /// Add password functionalitty*@


@*Update password functionalitty*@

<UpdatePasswordModal @ref="updatePasswordModal" SelectedPassword="@selectedRow" Refresh=@Refresh />

@code {
    private UpdatePasswordModal updatePasswordModal;

    void ShowUpdateModal()
    {
        updatePasswordModal.Show();
    }
}
@*End /// Update password functionalitty*@

 @*Delete password functionalitty*@

<DeletePasswordModal @ref="deletePasswordModal" SelectedPassword="@selectedRow" Refresh=@Refresh />

@code {
    private DeletePasswordModal deletePasswordModal;

    void ShowDeleteModal()
    {
        deletePasswordModal.Show();
    }
}
@*End /// Delete password functionalitty*@

@code{
    async void Refresh()
    {
        passwords = await passwordApi.GetPasswordsAsync();
        StateHasChanged();
    }
}

@if (passwords == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="table">
        <thead>
            <tr class ="table_header_row">
                <th class="column_with_btns" style="width: 40px;" ></th>
                <th class="column_with_btns" style="width: 40px;"></th>
                <th>Website</th>
                <th>Email</th>
                <th>Password</th>
                <th>Created on </th>
                <th>Last update</th>
                <th>Expiration date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var password in passwords)
            {
                <tr class="table_row"@onclick="() => SelectRow(password)">
                    <td>
                        @if(password == selectedRow)
                        {
                            <Button class="btn special_btn" @onclick="ShowDeleteModal"><Icon Name="IconName.XLg" Color="IconColor.Danger" Size="IconSize.x5" /></Button>
                        }
                    </td>
                    <td>
                        @if (password == selectedRow)
                        {
                            <Button class="btn special_btn" @onclick="ShowUpdateModal"><Icon Name="IconName.ThreeDotsVertical" Color="IconColor.Muted" Size="IconSize.x5" /></Button>
                        }
                    </td>
                    <td>@password.associated_website</td>
                    <td>@password.associated_email</td>
                    <td>@password.password_value</td>
                    <td>@password.time_of_creation</td>
                    <td>@password.time_of_last_update</td>
                    <td>@password.expiration_date</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>

}