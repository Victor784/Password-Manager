@using ApiReturnTypes
@using System
@using PasswordManagerClient.Services
@using BlazorBootstrap
@inject PasswordApiClient passwordApi


<div>

    <div class="form-group">
        <label>Website:</label>
        <input type="text" @bind="website" />
    </div>
    <div class="form-group">
        <label>Email:</label>
        <input type="text" @bind="email" />
    </div>
    <div class="form-group">
        <label>Password:</label>
        <input type="text" @bind="password" />
    </div>
    <div class="form-group">
        <label>Password lifetime :</label>
        <InputRadioGroup @bind-Value="@months_until_expired">
            <div class="label_radio_btn_element">
                <label>1 month</label> <InputRadio Value="@("1 month")" class="add_pass_modal_radio_btn" />
            </div>
            <div class="label_radio_btn_element">
                <label>2 months</label> <InputRadio Value="@("2 months")" class="add_pass_modal_radio_btn" />
            </div>
            <div class="label_radio_btn_element">
                <label>3 months</label> <InputRadio Value="@("3 months")" class="add_pass_modal_radio_btn" />
            </div>
        </InputRadioGroup>
    </div>
    <div class="form_buttons_group">
        <Button class="btn btn-primary" Color="ButtonColor.Primary" id="save-button" @onclick="SubmitAddForm">Save changes</Button>
        <Button class="btn btn-primary" Color="ButtonColor.Secondary" @onclick="CloseModal">Close</Button>
    </div>
</div>

@code {
    private string website;
    private string email;
    private string password;
    private string months_until_expired = "1 month";
    [Parameter]
    public EventCallback<int> CloseModalParent { get; set; }
    [Parameter]
    public EventCallback UpdateTable { get; set; }

    public  async Task SubmitAddForm()
    {
        //Instead of 1 we should use the user_id 
        Password pass = new Password(1, website, email, password, DateTime.Now.Date.ToString("dd-MMM-yyyy"), DateTime.Now.Date.ToString("dd-MMM-yyyy"), months_until_expired);
        var response = await passwordApi.AddPasswordAsync(pass);
        await UpdateTable.InvokeAsync();
        await CloseModalParent.InvokeAsync(response);
    }

    public async void CloseModal()
    {
        await CloseModalParent.InvokeAsync(-1);
    }
}